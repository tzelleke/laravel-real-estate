name: CI

on: [push]

env:
  NODE_VERSION: 18
  PHP_VERSION: 8.1

jobs:
  lint_test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: testing
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: php-cs-fixer, phpstan, phpunit

      - uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/composer/files
          key: dependencies-composer-${{ hashFiles('composer.json') }}

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-interaction

      - name: PHP CS Fixer
        run: |
          php-cs-fixer fix \
          --config=.php-cs-fixer.dist.php \
          --verbose \
          --dry-run \
          --using-cache=no

      - name: Cache PHPStan results
        uses: actions/cache@v3
        with:
          path: /tmp/phpstan
          key: cache-phpstan

      - name: PHPStan
        run: |
          phpstan analyze -c phpstan.neon.dist

      - name: Install Node dependencies
        run: |
          npm ci

      - name: Run ESLint
        run: |
          npx eslint resources/js

      - name: Run Prettier
        run: |
          npx prettier --check resources

      - name: Build frontend assets
        run: |
          npm run build

      - name: Prepare Laravel
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: PHPUnit
        env:
          DB_HOST: '0.0.0.0'
          DB_PORT: ${{ job.services.postgres.ports['5432'] }}
          DB_USERNAME: ${{ env.POSTGRES_USER }}
          DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        run: |
          php artisan test --coverage
